{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Jebb\\\\Desktop\\\\react-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Jebb\\\\Desktop\\\\react-project\\\\src\\\\components\\\\Summary.js\";\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { incrementByAmount, decrement, increment } from './counter';\nimport { useNavigate } from 'react-router-dom';\nimport Addonsmonthlyfinal from './Addonsmonthlyfinal';\nimport Addonsyearlyfinal from './Addonsyearlyfinal';\nexport default function Summary() {\n  var _this = this;\n  var isPlanName = useSelector(function (state) {\n    return state.counter.name;\n  });\n  var isPlanPrice = useSelector(function (state) {\n    return state.counter.value;\n  });\n  var isPlanType = useSelector(function (state) {\n    return state.counter.plan;\n  });\n  var AddOnsMemes = useSelector(function (state) {\n    return state.counter.addOns;\n  });\n  var optionSelection = useSelector(function (state) {\n    return state.counter.time;\n  });\n  var _useState = useState('content3'),\n    _useState2 = _slicedToArray(_useState, 2),\n    confirm = _useState2[0],\n    setConfirm = _useState2[1];\n  var planYearly = function planYearly() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 12\n      }\n    }, \"$\", isPlanPrice, \"/yr\");\n  };\n  var planMonthly = function planMonthly() {\n    return /*#__PURE__*/React.createElement(\"p\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 12\n      }\n    }, \"$\", isPlanPrice, \"/mo\");\n  };\n  var totalYearly = function totalYearly() {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 12\n      }\n    }, \"$\", total);\n  };\n  var totalMonthly = function totalMonthly() {\n    return /*#__PURE__*/React.createElement(\"h4\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 12\n      }\n    }, \"$\", total);\n  };\n  var handleTotal = function handleTotal() {\n    if (optionSelection) {\n      return totalYearly();\n    } else {\n      return totalMonthly();\n    }\n  };\n  var handlePlanOption = function handlePlanOption() {\n    if (optionSelection) {\n      return planYearly();\n    } else {\n      return planMonthly();\n    }\n  };\n  var addOnCost = AddOnsMemes.reduce(function (total, currentValue) {\n    return total = total + parseInt(currentValue.cost);\n  }, 0);\n  var total = parseInt(addOnCost) + parseInt(isPlanPrice);\n  return /*#__PURE__*/React.createElement(\"form\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: confirm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"content-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 11\n    }\n  }, \"Finishing up\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, \"Double-check everything looks OK before confirming\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, isPlanName, \" (\", isPlanType, \")\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"summary-price\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"change\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }\n  }, \"Change\"), handlePlanOption())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"addon-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, AddOnsMemes.map(function (elem) {\n    if (!optionSelection) {\n      return /*#__PURE__*/React.createElement(Addonsmonthlyfinal, Object.assign({\n        key: elem.id\n      }, elem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 24\n        }\n      }));\n    } else {\n      return /*#__PURE__*/React.createElement(Addonsyearlyfinal, Object.assign({\n        key: elem.id\n      }, elem, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 19\n        }\n      }));\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"total\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 11\n    }\n  }, \"Total(per month)\"), /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }\n  }, handleTotal())), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"bottom-buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 11\n    }\n  }, \"Go Back\"), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }\n  }, \"Confirm\"))));\n}","map":{"version":3,"names":["React","useState","useDispatch","useSelector","incrementByAmount","decrement","increment","useNavigate","Addonsmonthlyfinal","Addonsyearlyfinal","Summary","isPlanName","state","counter","name","isPlanPrice","value","isPlanType","plan","AddOnsMemes","addOns","optionSelection","time","confirm","setConfirm","planYearly","planMonthly","totalYearly","total","totalMonthly","handleTotal","handlePlanOption","addOnCost","reduce","currentValue","parseInt","cost","map","elem","id"],"sources":["C:/Users/Jebb/Desktop/react-project/src/components/Summary.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { incrementByAmount, decrement, increment } from './counter';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport Addonsmonthlyfinal from './Addonsmonthlyfinal';\r\nimport Addonsyearlyfinal from './Addonsyearlyfinal';\r\nexport default function Summary() {\r\n  const isPlanName = useSelector((state) => state.counter.name);\r\n  const isPlanPrice = useSelector((state) => state.counter.value);\r\n  const isPlanType = useSelector((state) => state.counter.plan);\r\n  const AddOnsMemes = useSelector((state) => state.counter.addOns);\r\n  const optionSelection = useSelector((state) => state.counter.time);\r\n  const [confirm, setConfirm] = useState('content3');\r\n  const planYearly = () => {\r\n    return <p>${isPlanPrice}/yr</p>;\r\n  };\r\n  const planMonthly = () => {\r\n    return <p>${isPlanPrice}/mo</p>;\r\n  };\r\n  const totalYearly = () => {\r\n    return <h4>${total}</h4>;\r\n  };\r\n  const totalMonthly = () => {\r\n    return <h4>${total}</h4>;\r\n  };\r\n  const handleTotal = () => {\r\n    if (optionSelection) {\r\n      return totalYearly();\r\n    } else {\r\n      return totalMonthly();\r\n    }\r\n  };\r\n\r\n  const handlePlanOption = () => {\r\n    if (optionSelection) {\r\n      return planYearly();\r\n    } else {\r\n      return planMonthly();\r\n    }\r\n  };\r\n  const addOnCost = AddOnsMemes.reduce(\r\n    (total, currentValue) => (total = total + parseInt(currentValue.cost)),\r\n    0\r\n  );\r\n  const total = parseInt(addOnCost) + parseInt(isPlanPrice);\r\n\r\n  return (\r\n    <form>\r\n      <div className={confirm}>\r\n        <div className=\"content-text\">\r\n          <h1>Finishing up</h1>\r\n          <p>Double-check everything looks OK before confirming</p>\r\n        </div>\r\n        <div className=\"summary-box\">\r\n          <div className=\"summary-text\">\r\n            <h2>\r\n              {isPlanName} ({isPlanType})\r\n            </h2>\r\n            <div className=\"summary-price\">\r\n              <button className=\"change\">Change</button>\r\n              {handlePlanOption()}\r\n            </div>\r\n          </div>\r\n          <div className=\"addon-body\">\r\n            {AddOnsMemes.map((elem) => {\r\n              if (!optionSelection) {\r\n                return <Addonsmonthlyfinal key={elem.id} {...elem} />;\r\n              } else {\r\n                return (\r\n                  <Addonsyearlyfinal\r\n                    key={elem.id}\r\n                    {...elem}\r\n                  ></Addonsyearlyfinal>\r\n                );\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"total\">\r\n          <p>Total(per month)</p>\r\n          <h4>{handleTotal()}</h4>\r\n        </div>\r\n        <div className=\"bottom-buttons\">\r\n          <button>Go Back</button>\r\n          <button>Confirm</button>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}