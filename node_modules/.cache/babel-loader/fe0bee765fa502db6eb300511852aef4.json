{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Jebb\\\\Desktop\\\\react-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Jebb\\\\Desktop\\\\react-project\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { createSlice } from '@reduxjs/toolkit';\nexport var counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0,\n    name: '',\n    plan: '',\n    addOns: [{\n      name: '',\n      price: 0,\n      text: ''\n    }]\n  },\n  reducers: {\n    increment: function increment(state, action) {\n      state.plan = action.payload;\n    },\n    decrement: function decrement(state, action) {\n      state.name = action.payload;\n    },\n    incrementByAmount: function incrementByAmount(state, action) {\n      state.value = action.payload;\n    },\n    addOnName: function addOnName(state, action) {\n      return _objectSpread({}, state, {\n        addOns: [].concat(_toConsumableArray(state.addOns), [action.payload.new])\n      });\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nvar _counterSlice$actions = counterSlice.actions,\n  increment = _counterSlice$actions.increment,\n  decrement = _counterSlice$actions.decrement,\n  incrementByAmount = _counterSlice$actions.incrementByAmount,\n  addOnName = _counterSlice$actions.addOnName;\nexport { increment, decrement, incrementByAmount, addOnName };\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","value","plan","addOns","price","text","reducers","increment","state","action","payload","decrement","incrementByAmount","addOnName","new","actions","reducer"],"sources":["C:/Users/Jebb/Desktop/react-project/src/components/counter.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n    name: '',\r\n    plan: '',\r\n    addOns: [\r\n      {\r\n        name: '',\r\n        price: 0,\r\n        text: '',\r\n      },\r\n    ],\r\n  },\r\n  reducers: {\r\n    increment: (state, action) => {\r\n      state.plan = action.payload;\r\n    },\r\n    decrement: (state, action) => {\r\n      state.name = action.payload;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n    addOnName: (state, action) => {\r\n      return {\r\n        ...state,\r\n        addOns: [...state.addOns, action.payload.new],\r\n      };\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  increment,\r\n  decrement,\r\n  incrementByAmount,\r\n  addOnName,\r\n} = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":";;AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,IAAMC,YAAY,GAAGD,WAAW,CAAC;EACtCE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,KAAK,EAAE,CAAC;IACRF,IAAI,EAAE,EAAE;IACRG,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE,CACN;MACEJ,IAAI,EAAE,EAAE;MACRK,KAAK,EAAE,CAAC;MACRC,IAAI,EAAE;IACR,CAAC;EAEL,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAE,mBAACC,KAAK,EAAEC,MAAM,EAAK;MAC5BD,KAAK,CAACN,IAAI,GAAGO,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,SAAS,EAAE,mBAACH,KAAK,EAAEC,MAAM,EAAK;MAC5BD,KAAK,CAACT,IAAI,GAAGU,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDE,iBAAiB,EAAE,2BAACJ,KAAK,EAAEC,MAAM,EAAK;MACpCD,KAAK,CAACP,KAAK,GAAGQ,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDG,SAAS,EAAE,mBAACL,KAAK,EAAEC,MAAM,EAAK;MAC5B,yBACKD,KAAK;QACRL,MAAM,+BAAMK,KAAK,CAACL,MAAM,IAAEM,MAAM,CAACC,OAAO,CAACI,GAAG;MAAC;IAEjD;EACF;AACF,CAAC,CAAC;;AAEF;AAAA,4BAMIhB,YAAY,CAACiB,OAAO;EAJtBR,SAAS,yBAATA,SAAS;EACTI,SAAS,yBAATA,SAAS;EACTC,iBAAiB,yBAAjBA,iBAAiB;EACjBC,SAAS,yBAATA,SAAS;AAAA;AAGX,eAAef,YAAY,CAACkB,OAAO"},"metadata":{},"sourceType":"module"}