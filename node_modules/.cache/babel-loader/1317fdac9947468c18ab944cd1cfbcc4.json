{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    time: false,\n    value: 0,\n    name: '',\n    plan: '',\n    addOns: []\n  },\n  reducers: {\n    increment: function increment(state, action) {\n      state.plan = action.payload;\n    },\n    decrement: function decrement(state, action) {\n      state.name = action.payload;\n    },\n    incrementByAmount: function incrementByAmount(state, action) {\n      state.value = action.payload;\n    },\n    addOnName: function addOnName(state, action) {\n      state.addOns = action.payload;\n    },\n    option: function option(state) {\n      state.time = true;\n    },\n    removeOption: function removeOption(state) {\n      return state.time;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nvar _counterSlice$actions = counterSlice.actions,\n  increment = _counterSlice$actions.increment,\n  decrement = _counterSlice$actions.decrement,\n  incrementByAmount = _counterSlice$actions.incrementByAmount,\n  addOnName = _counterSlice$actions.addOnName,\n  option = _counterSlice$actions.option;\nexport { increment, decrement, incrementByAmount, addOnName, option };\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","time","value","plan","addOns","reducers","increment","state","action","payload","decrement","incrementByAmount","addOnName","option","removeOption","actions","reducer"],"sources":["C:/Users/Jebb/Desktop/react-project/src/components/counter.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    time: false,\r\n    value: 0,\r\n    name: '',\r\n    plan: '',\r\n    addOns: [],\r\n  },\r\n  reducers: {\r\n    increment: (state, action) => {\r\n      state.plan = action.payload;\r\n    },\r\n    decrement: (state, action) => {\r\n      state.name = action.payload;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n    addOnName: (state, action) => {\r\n      state.addOns = action.payload;\r\n    },\r\n    option: (state) => {\r\n      state.time = true;\r\n    },\r\n    removeOption: (state) => {\r\n      return state.time;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const {\r\n  increment,\r\n  decrement,\r\n  incrementByAmount,\r\n  addOnName,\r\n  option,\r\n} = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,IAAMC,YAAY,GAAGD,WAAW,CAAC;EACtCE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,IAAI,EAAE,KAAK;IACXC,KAAK,EAAE,CAAC;IACRH,IAAI,EAAE,EAAE;IACRI,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAE,mBAACC,KAAK,EAAEC,MAAM,EAAK;MAC5BD,KAAK,CAACJ,IAAI,GAAGK,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,SAAS,EAAE,mBAACH,KAAK,EAAEC,MAAM,EAAK;MAC5BD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDE,iBAAiB,EAAE,2BAACJ,KAAK,EAAEC,MAAM,EAAK;MACpCD,KAAK,CAACL,KAAK,GAAGM,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDG,SAAS,EAAE,mBAACL,KAAK,EAAEC,MAAM,EAAK;MAC5BD,KAAK,CAACH,MAAM,GAAGI,MAAM,CAACC,OAAO;IAC/B,CAAC;IACDI,MAAM,EAAE,gBAACN,KAAK,EAAK;MACjBA,KAAK,CAACN,IAAI,GAAG,IAAI;IACnB,CAAC;IACDa,YAAY,EAAE,sBAACP,KAAK,EAAK;MACvB,OAAOA,KAAK,CAACN,IAAI;IACnB;EACF;AACF,CAAC,CAAC;;AAEF;AAAA,4BAOIH,YAAY,CAACiB,OAAO;EALtBT,SAAS,yBAATA,SAAS;EACTI,SAAS,yBAATA,SAAS;EACTC,iBAAiB,yBAAjBA,iBAAiB;EACjBC,SAAS,yBAATA,SAAS;EACTC,MAAM,yBAANA,MAAM;AAAA;AAGR,eAAef,YAAY,CAACkB,OAAO"},"metadata":{},"sourceType":"module"}