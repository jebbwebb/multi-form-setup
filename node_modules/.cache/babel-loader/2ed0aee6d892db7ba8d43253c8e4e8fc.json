{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nexport var counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0,\n    name: ''\n  },\n  reducers: {\n    increment: function increment(state) {\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\n      // doesn't actually mutate the state because it uses the Immer library,\n      // which detects changes to a \"draft state\" and produces a brand new\n      // immutable state based off those changes\n      state.value += 1;\n    },\n    decrement: function decrement(state, action) {\n      state.value = 2;\n    },\n    incrementByAmount: function incrementByAmount(state, action) {\n      state.value += action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nvar _counterSlice$actions = counterSlice.actions,\n  increment = _counterSlice$actions.increment,\n  decrement = _counterSlice$actions.decrement,\n  incrementByAmount = _counterSlice$actions.incrementByAmount;\nexport { increment, decrement, incrementByAmount };\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","counterSlice","name","initialState","value","reducers","increment","state","decrement","action","incrementByAmount","payload","actions","reducer"],"sources":["C:/Users/Jebb/Desktop/react-project/src/components/counter.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n    name: '',\r\n  },\r\n  reducers: {\r\n    increment: (state) => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: (state, action) => {\r\n      state.value = 2;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAE9C,OAAO,IAAMC,YAAY,GAAGD,WAAW,CAAC;EACtCE,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,KAAK,EAAE,CAAC;IACRF,IAAI,EAAE;EACR,CAAC;EACDG,QAAQ,EAAE;IACRC,SAAS,EAAE,mBAACC,KAAK,EAAK;MACpB;MACA;MACA;MACA;MACAA,KAAK,CAACH,KAAK,IAAI,CAAC;IAClB,CAAC;IACDI,SAAS,EAAE,mBAACD,KAAK,EAAEE,MAAM,EAAK;MAC5BF,KAAK,CAACH,KAAK,GAAG,CAAC;IACjB,CAAC;IACDM,iBAAiB,EAAE,2BAACH,KAAK,EAAEE,MAAM,EAAK;MACpCF,KAAK,CAACH,KAAK,IAAIK,MAAM,CAACE,OAAO;IAC/B;EACF;AACF,CAAC,CAAC;;AAEF;AAAA,4BAC2DV,YAAY,CAACW,OAAO;EAAhEN,SAAS,yBAATA,SAAS;EAAEE,SAAS,yBAATA,SAAS;EAAEE,iBAAiB,yBAAjBA,iBAAiB;AAAA;AAEtD,eAAeT,YAAY,CAACY,OAAO"},"metadata":{},"sourceType":"module"}