{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { act } from 'react-dom/test-utils';\nexport var counterSlice = createSlice({\n  name: 'counter',\n  initialState: {\n    value: 0,\n    name: '',\n    plan: '',\n    addOns: {\n      name: 'yo',\n      price: 0\n    }\n  },\n  reducers: {\n    increment: function increment(state, action) {\n      state.plan = action.payload;\n    },\n    decrement: function decrement(state, action) {\n      state.name = action.payload;\n    },\n    incrementByAmount: function incrementByAmount(state, action) {\n      state.value = action.payload;\n    },\n    addOnName: function addOnName(state, action) {\n      state.addOns.name = action.payload;\n    }\n  }\n});\n\n// Action creators are generated for each case reducer function\nvar _counterSlice$actions = counterSlice.actions,\n  increment = _counterSlice$actions.increment,\n  decrement = _counterSlice$actions.decrement,\n  incrementByAmount = _counterSlice$actions.incrementByAmount;\nexport { increment, decrement, incrementByAmount };\nexport default counterSlice.reducer;","map":{"version":3,"names":["createSlice","act","counterSlice","name","initialState","value","plan","addOns","price","reducers","increment","state","action","payload","decrement","incrementByAmount","addOnName","actions","reducer"],"sources":["C:/Users/Jebb/Desktop/react-project/src/components/counter.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\nimport { act } from 'react-dom/test-utils';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n    name: '',\r\n    plan: '',\r\n    addOns: {\r\n      name: 'yo',\r\n      price: 0,\r\n    },\r\n  },\r\n  reducers: {\r\n    increment: (state, action) => {\r\n      state.plan = action.payload;\r\n    },\r\n    decrement: (state, action) => {\r\n      state.name = action.payload;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value = action.payload;\r\n    },\r\n    addOnName: (state, action) => {\r\n      state.addOns.name = action.payload;\r\n    },\r\n  },\r\n});\r\n\r\n// Action creators are generated for each case reducer function\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\nexport default counterSlice.reducer;\r\n"],"mappings":"AAAA,SAASA,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,GAAG,QAAQ,sBAAsB;AAE1C,OAAO,IAAMC,YAAY,GAAGF,WAAW,CAAC;EACtCG,IAAI,EAAE,SAAS;EACfC,YAAY,EAAE;IACZC,KAAK,EAAE,CAAC;IACRF,IAAI,EAAE,EAAE;IACRG,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;MACNJ,IAAI,EAAE,IAAI;MACVK,KAAK,EAAE;IACT;EACF,CAAC;EACDC,QAAQ,EAAE;IACRC,SAAS,EAAE,mBAACC,KAAK,EAAEC,MAAM,EAAK;MAC5BD,KAAK,CAACL,IAAI,GAAGM,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDC,SAAS,EAAE,mBAACH,KAAK,EAAEC,MAAM,EAAK;MAC5BD,KAAK,CAACR,IAAI,GAAGS,MAAM,CAACC,OAAO;IAC7B,CAAC;IACDE,iBAAiB,EAAE,2BAACJ,KAAK,EAAEC,MAAM,EAAK;MACpCD,KAAK,CAACN,KAAK,GAAGO,MAAM,CAACC,OAAO;IAC9B,CAAC;IACDG,SAAS,EAAE,mBAACL,KAAK,EAAEC,MAAM,EAAK;MAC5BD,KAAK,CAACJ,MAAM,CAACJ,IAAI,GAAGS,MAAM,CAACC,OAAO;IACpC;EACF;AACF,CAAC,CAAC;;AAEF;AAAA,4BAC2DX,YAAY,CAACe,OAAO;EAAhEP,SAAS,yBAATA,SAAS;EAAEI,SAAS,yBAATA,SAAS;EAAEC,iBAAiB,yBAAjBA,iBAAiB;AAAA;AAEtD,eAAeb,YAAY,CAACgB,OAAO"},"metadata":{},"sourceType":"module"}